[package]
name = "waitpid-any"
version = "0.2.1"
edition = "2021"
# Keep in sync with CI!
rust-version = "1.63"
description = "Wait for any PID, an extension to waitpid(2)"
categories = ["api-bindings", "os::unix-apis", "os::windows-apis"]
license = "MIT OR Apache-2.0"
repository = "https://github.com/oxalica/waitpid-any"
keywords = ["process", "pidfd", "kqueue", "wait", "waitpid"]
include = [
    "/Cargo.toml",
    "/LICENSE-APACHE",
    "/LICENSE-MIT",
    "/README.md",
    "/src/**",
]

# This can be more precise but unsupported platforms will fail to compile anyway.
[target.'cfg(unix)'.dependencies]
rustix = { version = "0.38", default-features = false, features = ["event", "process", "std"] }

[target.'cfg(windows)'.dependencies]
windows-sys = { version = "0.52", features = ["Win32_Foundation", "Win32_System_Threading"] }

[lints.clippy]
pedantic = { level = "warn", priority = -1 }
# Workaround: https://github.com/rust-lang/rust-clippy/issues/11436
missing-panics-doc = "allow"
# `pid_t` is defiend as signed integer but Rust std uses `u32`.
cast-sign-loss = "allow"
cast-possible-wrap = "allow"

# Workaround: https://github.com/rust-lang/rust-clippy/issues/12208#issuecomment-2014353659
unused-io-amount = "allow"
